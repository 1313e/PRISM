# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master
- dev
- azure-pipelines

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python35:
      python.version: '3.5'
    Python36:
      python.version: '3.6'
    Python37:
      python.version: '3.7'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip setuptools wheel
    pip install -r requirements_dev.txt
    pip install pytest-azurepipelines
  displayName: 'Install testing dependencies'

- script: |
    check-manifest
    python setup.py sdist bdist_wheel
    twine check dist/*
    python -c "import prism; prism.get_info()"
  displayName: 'Test deployability'

- script: |
    pytest
  displayName: 'Test package'
